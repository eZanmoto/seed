================================================== arithmetic
print(1 + 2)
print(5 - 2)
print(2 - 5)
print(2 * 3)
print(5 / 2)
print(5 % 2)
--------------------------------------------------
3
3
-3
6
2
1
================================================== arithmetic_precedence
print(1 + 2 * 3)
print(1 * 2 + 3)
print(6 - 4 / 2)
print(6 / 4 - 2)
print(7 % 2 + 1)
--------------------------------------------------
7
5
4
-1
2
================================================== op_assign1
x := 1
x += 2
print(x)

x -= 1
print(x)

x *= 6
print(x)

x /= 3
print(x)

x %= 2
print(x)
--------------------------------------------------
3
2
12
4
0
================================================== op_assign2
x := 1
x += 1
print(x)
--------------------------------------------------
2
================================================== op_assign3
x := 1
y := x
x += 1
print(x)
print(y)
--------------------------------------------------
2
1
================================================== op_assign_strings
x := "Hello"
x += ", world!"
print(x)
--------------------------------------------------
Hello, world!
================================================== paren_precedence
print((1 + 2) * 3)
print(1 * (2 + 3))
print((6 - 4) / 2)
print(6 / (4 - 2))
print(7 % (2 + 1))
--------------------------------------------------
9
5
1
3
1
================================================== boolean
print(true && false)
print(true || false)
--------------------------------------------------
false
true
================================================== boolean_precedence
print([
    1 < 2,
    2 < 2,
    3 < 2,
])
print([
    1 <= 2,
    2 <= 2,
    3 <= 2,
])
print([
    1 > 2,
    2 > 2,
    3 > 2,
])
print([
    1 >= 2,
    2 >= 2,
    3 >= 2,
])
--------------------------------------------------
[
    true,
    false,
    false,
]
[
    true,
    true,
    false,
]
[
    false,
    false,
    true,
]
[
    false,
    true,
    true,
]
================================================== equality
print(1 == 1)
print(1 == 2)
print(1 != 1)
print(1 != 2)
--------------------------------------------------
true
false
false
true
================================================== list_equality
print([] == [])
print([] == [1, 2])
print([1, 2] == [1, 2])
--------------------------------------------------
true
false
true
================================================== object_equality
print({} == {})
print({} == {"a": 1})
print({"a": 1} == {"a": 1})
print({"a": 1} == {"b": 2})
--------------------------------------------------
true
false
true
false
================================================== list_ref_equality
a := []
b := a
c := []
print(a === a)
print(a === b)
print(a === c)
--------------------------------------------------
true
true
false
================================================== object_ref_equality
a := {}
b := a
c := {}
print(a === a)
print(a === b)
print(a === c)
--------------------------------------------------
true
true
false
================================================== fn_ref_equality
fn a() {}
b := a
fn c() {}
print(a === a)
print(a === b)
print(a === c)
--------------------------------------------------
true
true
false
================================================== list_var_equality
a := [1, 2, 3]
b := a
print(a == b)
--------------------------------------------------
true
================================================== object_var_equality
a := {"a": 1, "b": 2}
b := a
print(a == b)
--------------------------------------------------
true
================================================== concatenation_str
print("Hello," + " world!")
--------------------------------------------------
Hello, world!
================================================== concatenation_list
print([1, 2] + [3, 4])
--------------------------------------------------
[
    1,
    2,
    3,
    4,
]
================================================== concatenation_same_list
x := [1, 2]
print(x + x)
--------------------------------------------------
[
    1,
    2,
    1,
    2,
]
================================================== range
print(0 .. 4)
--------------------------------------------------
[
    0,
    1,
    2,
    3,
]
================================================== range_negative_start
print(-1 .. 2)
--------------------------------------------------
[
    -1,
    0,
    1,
]
================================================== range_negative_end
print(1 .. -1)
--------------------------------------------------
[
]
================================================== range_negative_bounds
print(-4 .. -1)
--------------------------------------------------
[
    -4,
    -3,
    -2,
]
================================================== variables
x := 1
y := 2

print(x + x)
print(x + y)
print(x + 3)
--------------------------------------------------
2
3
4
==================================================
